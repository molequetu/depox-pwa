{"version":3,"sources":["pages/Export/Export.js"],"names":["useStyles","makeStyles","theme","paper","width","marginLeft","spacing","marginRight","breakpoints","up","form","marginTop","submit","margin","container","display","flexDirection","alignItems","justifyContent","height","Export","classes","intl","useIntl","enqueueSnackbar","useSnackbar","useState","product","setProduct","bin","setBin","quantity","setQuantity","endpoint","clearFormState","pageTitle","formatMessage","id","className","elevation","component","variant","onSubmit","event","preventDefault","data","binCode","itemCode","fetch","config","apiURL","method","headers","body","JSON","stringify","then","response","json","status","message","anchorOrigin","vertical","horizontal","catch","error","console","navigator","window","serviceWorker","ready","reg","sync","getTags","tags","includes","exportStock","value","onChange","e","target","required","fullWidth","label","name","autoFocus","type","InputLabelProps","shrink","InputProps","inputProps","min","color"],"mappings":"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","file":"static/js/16.b34cb30b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Page from 'material-ui-shell/lib/containers/Page'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'react-intl'\r\nimport { useSnackbar } from 'notistack'\r\nimport config from 'config/config'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(3),\r\n    marginRight: theme.spacing(3),\r\n    [theme.breakpoints.up(620 + theme.spacing(6))]: {\r\n      width: 400,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n    marginTop: theme.spacing(9),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\r\n      3\r\n    )}px`,\r\n  },\r\n  form: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: `100%`,\r\n  },\r\n}))\r\n\r\n\r\nconst Export = () => {\r\n  const classes = useStyles()\r\n  const intl = useIntl()\r\n  const { enqueueSnackbar } = useSnackbar()\r\n\r\n  const [product, setProduct] = useState('')\r\n  const [bin, setBin] = useState('')\r\n  const [quantity, setQuantity] = useState(0)\r\n\r\n  const endpoint = 'Stocks/export'\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    exportStock();\r\n  }\r\n\r\n  function exportStock() {\r\n    const data = { binCode: bin, itemCode: product, quantity: quantity };\r\n    fetch(`${config.apiURL + endpoint}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.status === 404) {\r\n          // in case of error 404, inform user\r\n          enqueueSnackbar(data.message, {\r\n            variant: 'error',\r\n            anchorOrigin: {\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            },\r\n          })\r\n          return;\r\n        }\r\n        if (data.status === 409) {\r\n          // in case of error 404, inform user\r\n          enqueueSnackbar(data.message, {\r\n            variant: 'error',\r\n            anchorOrigin: {\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            },\r\n          })\r\n          return;\r\n        }\r\n        // request successfull, inform user and reset form\r\n        enqueueSnackbar(data.message, {\r\n          variant: 'success',\r\n          anchorOrigin: {\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n          },\r\n        })\r\n        clearFormState();\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error while exporting, will queue the request and retry later:', error);\r\n        // future detection for service worker\r\n        if ('serviceWorker' in navigator && 'SyncManager' in window) {\r\n          const registration = navigator.serviceWorker.ready;\r\n          // get registered tags, and check if import-export registerd tag exists\r\n          registration.then(reg => reg.sync.getTags()).then(tags => {\r\n            if (tags.includes('workbox-background-sync:import-export')) {\r\n              clearFormState();\r\n              // inform user that the request has been queued and will be send when online again\r\n              enqueueSnackbar(intl.formatMessage({ id: 'request_queued_msg' }), {\r\n                variant: 'warning',\r\n                anchorOrigin: {\r\n                  vertical: 'top',\r\n                  horizontal: 'center',\r\n                },\r\n              })\r\n            }\r\n          })\r\n        }\r\n      });\r\n  }\r\n\r\n  function clearFormState() {\r\n    setProduct('');\r\n    setBin('');\r\n    setQuantity(0);\r\n  }\r\n\r\n  return (\r\n    <Page pageTitle={intl.formatMessage({ id: 'export_products' })}>\r\n      <Paper className={classes.paper} elevation={6}>\r\n        <div className={classes.container}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            {intl.formatMessage({ id: 'export_products' })}\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={handleSubmit}>\r\n            <TextField\r\n              value={product}\r\n              onChange={(e) => setProduct(e.target.value)}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"product\"\r\n              label={intl.formatMessage({ id: 'product' })}\r\n              name=\"product\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              value={bin}\r\n              onChange={(e) => setBin(e.target.value)}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"bin\"\r\n              label={intl.formatMessage({ id: 'bin' })}\r\n              id=\"bin\"\r\n            />\r\n            <TextField\r\n              value={quantity}\r\n              onChange={(e) => setQuantity(e.target.value)}\r\n              id=\"quantity\"\r\n              label={intl.formatMessage({ id: 'quantity' })}\r\n              type=\"number\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n\r\n              }}\r\n              InputProps={{\r\n                inputProps: {\r\n                  min: 0\r\n                }\r\n              }}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"quantity\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              {intl.formatMessage({ id: 'export' })}\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Paper>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Export"],"sourceRoot":""}