{"version":3,"sources":["pages/Import/Import.js"],"names":["useStyles","makeStyles","theme","paper","width","marginLeft","spacing","marginRight","breakpoints","up","form","marginTop","submit","margin","container","display","flexDirection","alignItems","justifyContent","height","Import","classes","intl","useIntl","useState","product","setProduct","bin","setBin","pageTitle","formatMessage","id","className","elevation","component","variant","onSubmit","event","preventDefault","alert","noValidate","value","onChange","e","target","required","fullWidth","label","name","autoFocus","type","color"],"mappings":"+NASMA,EAAYC,aAAW,SAACC,GAAD,YAAY,CACrCC,OAAK,GACHC,MAAO,OACPC,WAAYH,EAAMI,QAAQ,GAC1BC,YAAaL,EAAMI,QAAQ,IAHxB,cAIFJ,EAAMM,YAAYC,GAAG,IAAMP,EAAMI,QAAQ,IAAM,CAC9CF,MAAO,IACPC,WAAY,OACZE,YAAa,SAPZ,0BASQL,EAAMI,QAAQ,IATtB,wBAUM,QAVN,8BAWY,UAXZ,2BAYS,UAZT,kCAaSJ,EAAMI,QAAQ,GAbvB,cAa+BJ,EAAMI,QAAQ,GAb7C,cAaqDJ,EAAMI,QAC5D,GAdC,UAiBLI,KAAM,CACJC,UAAWT,EAAMI,QAAQ,IAE3BM,OAAQ,CACNC,OAAQX,EAAMI,QAAQ,EAAG,EAAG,IAE9BQ,UAAW,CACTC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,OAAO,YA+DEC,UA1DA,WACX,IAAMC,EAAUrB,IACVsB,EAAOC,cAFK,EAGYC,mBAAS,IAHrB,mBAGXC,EAHW,KAGFC,EAHE,OAIIF,mBAAS,IAJb,mBAIXG,EAJW,KAINC,EAJM,KAWhB,OACE,cAAC,IAAD,CAAMC,UAAWP,EAAKQ,cAAc,CAAEC,GAAI,oBAA1C,SACA,cAAC,IAAD,CAAOC,UAAWX,EAAQlB,MAAO8B,UAAW,EAA5C,SACE,sBAAKD,UAAWX,EAAQP,UAAxB,UACE,cAAC,IAAD,CAAYoB,UAAU,KAAKC,QAAQ,KAAnC,SACGb,EAAKQ,cAAc,CAAEC,GAAI,sBAE5B,uBAAMC,UAAWX,EAAQX,KAAQ0B,SAZzC,SAAsBC,GAClBA,EAAMC,iBACNC,MAAM,yBAA2Bd,EAAU,IAAME,IAUYa,YAAU,EAAnE,UACF,cAAC,IAAD,CACIC,MAAOhB,EACPiB,SAAU,SAACC,GAAD,OAAOjB,EAAWiB,EAAEC,OAAOH,QACrCN,QAAQ,WACRtB,OAAO,SACPgC,UAAQ,EACRC,WAAS,EACTf,GAAG,UACHgB,MAAOzB,EAAKQ,cAAc,CAAEC,GAAI,YAChCiB,KAAK,UACLC,WAAS,IAEX,cAAC,IAAD,CACER,MAAOd,EACPe,SAAU,SAACC,GAAD,OAAOf,EAAOe,EAAEC,OAAOH,QACjCN,QAAQ,WACRtB,OAAO,SACPgC,UAAQ,EACRC,WAAS,EACTE,KAAK,MACLD,MAAOzB,EAAKQ,cAAc,CAAEC,GAAI,QAChCA,GAAG,QAEL,cAAC,IAAD,CACEmB,KAAK,SACLJ,WAAS,EACTX,QAAQ,YACRgB,MAAM,UACNnB,UAAWX,EAAQT,OALrB,SAOGU,EAAKQ,cAAc,CAAEC,GAAI","file":"static/js/15.c477f851.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Page from 'material-ui-shell/lib/containers/Page'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'react-intl'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      width: 'auto',\r\n      marginLeft: theme.spacing(3),\r\n      marginRight: theme.spacing(3),\r\n      [theme.breakpoints.up(620 + theme.spacing(6))]: {\r\n        width: 400,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n      },\r\n      marginTop: theme.spacing(9),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\r\n        3\r\n      )}px`,\r\n    },\r\n    form: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n    container: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      height: `100%`,\r\n    },\r\n  }))\r\n  \r\n\r\nconst Import = () =>  {\r\n    const classes = useStyles()\r\n    const intl = useIntl()\r\n    const [product, setProduct] = useState('')\r\n    const [bin, setBin] = useState('')\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        alert('A name was submitted: ' + product + \" \" + bin);\r\n      }\r\n\r\n      return (\r\n        <Page pageTitle={intl.formatMessage({ id: 'import_products' })}>\r\n        <Paper className={classes.paper} elevation={6}>\r\n          <div className={classes.container}>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              {intl.formatMessage({ id: 'import_products' })}\r\n            </Typography>\r\n            <form className={classes.form}   onSubmit={handleSubmit} noValidate>  \r\n          <TextField\r\n              value={product}\r\n              onChange={(e) => setProduct(e.target.value)}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"product\"\r\n              label={intl.formatMessage({ id: 'product' })}\r\n              name=\"product\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              value={bin}\r\n              onChange={(e) => setBin(e.target.value)}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"bin\"\r\n              label={intl.formatMessage({ id: 'bin' })}\r\n              id=\"bin\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              {intl.formatMessage({ id: 'import' })}\r\n            </Button>\r\n        </form>\r\n        </div>\r\n      </Paper>\r\n    </Page>\r\n      )\r\n    }\r\n  \r\nexport default Import"],"sourceRoot":""}