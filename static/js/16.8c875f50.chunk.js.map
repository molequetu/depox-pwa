{"version":3,"sources":["pages/Export/Export.js"],"names":["useStyles","makeStyles","theme","paper","width","marginLeft","spacing","marginRight","breakpoints","up","form","marginTop","submit","margin","container","display","flexDirection","alignItems","justifyContent","height","Export","classes","intl","useIntl","enqueueSnackbar","useSnackbar","useState","product","setProduct","bin","setBin","quantity","setQuantity","endpoint","clearFormState","pageTitle","formatMessage","id","className","elevation","component","variant","onSubmit","event","preventDefault","data","binCode","itemCode","fetch","config","apiURL","method","headers","body","JSON","stringify","then","response","json","status","message","anchorOrigin","vertical","horizontal","catch","error","console","navigator","window","serviceWorker","ready","SyncManager","getTags","tags","includes","exportStock","value","onChange","e","target","required","fullWidth","label","name","autoFocus","type","InputLabelProps","shrink","InputProps","inputProps","min","color"],"mappings":"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","file":"static/js/16.8c875f50.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Page from 'material-ui-shell/lib/containers/Page'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'react-intl'\r\nimport { useSnackbar } from 'notistack'\r\nimport config from 'config/config'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      width: 'auto',\r\n      marginLeft: theme.spacing(3),\r\n      marginRight: theme.spacing(3),\r\n      [theme.breakpoints.up(620 + theme.spacing(6))]: {\r\n        width: 400,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n      },\r\n      marginTop: theme.spacing(9),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\r\n        3\r\n      )}px`,\r\n    },\r\n    form: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n    container: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      height: `100%`,\r\n    },\r\n  }))\r\n  \r\n\r\nconst Export = () =>  {\r\n    const classes = useStyles()\r\n    const intl = useIntl()\r\n    const { enqueueSnackbar } = useSnackbar()\r\n\r\n    const [product, setProduct] = useState('')\r\n    const [bin, setBin] = useState('')\r\n    const [quantity, setQuantity] = useState(0)\r\n   \r\n    const endpoint = 'Stocks/export'\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        exportStock();\r\n      }\r\n\r\n      function exportStock() {\r\n        const data = { binCode : bin, itemCode : product, quantity : quantity };\r\n         fetch(`${config.apiURL + endpoint}`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n          })\r\n          .then(response =>  response.json())\r\n          .then(data => {\r\n            if(data.status === 404) {\r\n              // in case of error 404, inform user\r\n              enqueueSnackbar(data.message, {\r\n                variant: 'error',\r\n                anchorOrigin: {\r\n                  vertical: 'top',\r\n                  horizontal: 'center',\r\n                },\r\n              })\r\n             return;\r\n            }\r\n            if(data.status === 409) {\r\n                // in case of error 404, inform user\r\n                enqueueSnackbar(data.message, {\r\n                  variant: 'error',\r\n                  anchorOrigin: {\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                  },\r\n                })\r\n               return;\r\n              }\r\n            // request successfull, inform user and reset form\r\n            enqueueSnackbar(data.message, {\r\n              variant: 'success',\r\n              anchorOrigin: {\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n              },\r\n            })\r\n            clearFormState();\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error while exporting, will queue the request and retry later:', error);\r\n            // future detection for service worker\r\n            if ('serviceWorker' in navigator && 'SyncManager' in window) {\r\n              const registration =  navigator.serviceWorker.ready;\r\n              // get registered tags, and check if import-export registerd tag exists\r\n              if(registration) window.SyncManager.getTags().then(tags => {\r\n              if (tags.includes('import-export')) {\r\n                  clearFormState();\r\n                  // inform user that the request has been queued and will be send when online again\r\n                  enqueueSnackbar(intl.formatMessage({ id: 'request_queued_msg' }), {\r\n                    variant: 'warning',\r\n                    anchorOrigin: {\r\n                      vertical: 'top',\r\n                      horizontal: 'center',\r\n                    },\r\n                  })\r\n              }\r\n            })\r\n            }\r\n          });\r\n      } \r\n\r\n      function clearFormState() {\r\n        setProduct('');\r\n        setBin('');\r\n        setQuantity(0);\r\n      }\r\n\r\n      return (\r\n        <Page pageTitle={intl.formatMessage({ id: 'export_products' })}>\r\n        <Paper className={classes.paper} elevation={6}>\r\n          <div className={classes.container}>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              {intl.formatMessage({ id: 'export_products' })}\r\n            </Typography>\r\n            <form className={classes.form}   onSubmit={handleSubmit}>  \r\n          <TextField\r\n              value={product}\r\n              onChange={(e) => setProduct(e.target.value)}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"product\"\r\n              label={intl.formatMessage({ id: 'product' })}\r\n              name=\"product\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              value={bin}\r\n              onChange={(e) => setBin(e.target.value)}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"bin\"\r\n              label={intl.formatMessage({ id: 'bin' })}\r\n              id=\"bin\"\r\n            />\r\n             <TextField\r\n             value = {quantity}\r\n             onChange={(e) => setQuantity(e.target.value)}\r\n             id=\"quantity\"\r\n             label={intl.formatMessage({ id: 'quantity' })}\r\n             type=\"number\"\r\n             InputLabelProps={{\r\n              shrink: true,\r\n\r\n             }}\r\n             InputProps={{\r\n              inputProps: { \r\n                  min: 0\r\n              }\r\n             }}\r\n             variant=\"outlined\"\r\n             margin=\"normal\"\r\n             required\r\n             fullWidth\r\n             name=\"quantity\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              {intl.formatMessage({ id: 'export' })}\r\n            </Button>\r\n        </form>\r\n        </div>\r\n      </Paper>\r\n    </Page>\r\n      )\r\n    }\r\n  \r\nexport default Export"],"sourceRoot":""}