{"version":3,"sources":["pages/Dashboard/Timeline.js","pages/Dashboard/StockMovements.js"],"names":["useStyles","makeStyles","theme","paper","padding","secondaryTail","backgroundColor","palette","secondary","main","StockTimeline","props","classes","Timeline","align","stocks","map","stock","TimelineItem","TimelineOppositeContent","Typography","variant","color","date","createdAt","console","log","Date","toLocaleTimeString","TimelineSeparator","actionType","TimelineDot","TimelineConnector","TimelineContent","Paper","elevation","className","component","item","code","bin","quantity","useState","movements","setMovements","intl","useIntl","loadData","a","fetch","then","response","json","data","catch","error","useEffect","pageTitle","formatMessage","id","defaultMessage"],"mappings":"8UAgBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,QAAS,YAEXC,cAAe,CACbC,gBAAiBJ,EAAMK,QAAQC,UAAUC,UAI9B,SAASC,EAAcC,GACpC,IAAMC,EAAUZ,IAOhB,OACE,cAACa,EAAA,EAAD,CAAUC,MAAM,YAAhB,SACGH,EAAMI,QACLJ,EAAMI,OAAOC,KAAI,SAACC,GAAD,OACf,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAlC,UAXOC,EAYMN,EAAMO,UAX3BC,QAAQC,IAAI,IAAIC,KAAKJ,IACd,IAAII,KAAKJ,GAAMK,0BAahB,eAACC,EAAA,EAAD,WAC2B,IAArBZ,EAAMa,WAAmB,eAACC,EAAA,EAAD,CAAaT,MAAM,UAAnB,cAA8B,cAAC,IAAD,IAA9B,OACxB,cAACS,EAAA,EAAD,CAAaT,MAAM,YAAnB,SAA+B,cAAC,IAAD,MAEpC,cAACU,EAAA,EAAD,OAEF,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAOC,UAAW,EAAGC,UAAWxB,EAAQT,MAAxC,SACE,eAACiB,EAAA,EAAD,CAAYC,QAAQ,KAAKgB,UAAU,KAAnC,UACCpB,EAAMqB,KAAKC,KADZ,WAC0BtB,EAAMuB,IAAID,KADpC,MAC6CtB,EAAMwB,mBAxBjE,IAAmBlB,OCrBN,qBAAa,IAAD,EACSmB,mBAAS,MADlB,mBAClBC,EADkB,KACPC,EADO,KAEnBC,EAAOC,cAEPC,EAAQ,uCAAG,sBAAAC,EAAA,sDACfC,MAAM,qCACHC,MAAK,SAAAC,GAAqC,OAAvB1B,QAAQC,IAAIyB,GAAkBA,EAASC,UAC1DF,MAAK,SAAAG,GACJT,EAAaS,MAEdC,OAAM,SAACC,GACN9B,QAAQ8B,MAAM,yBAA0BA,MAP7B,2CAAH,qDAed,OAJAC,qBAAU,WACRT,MACC,IAGD,cAAC,IAAD,CACEU,UAAWZ,EAAKa,cAAc,CAAEC,GAAI,iBAAkBC,eAAgB,oBADxE,SAGE,cAAC,IAAD,UACE,cAAClD,EAAD,CAAeK,OAAU4B","file":"static/js/15.eb904460.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Timeline from \"@material-ui/lab/Timeline\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\r\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\r\nimport AddToQueueIcon from '@material-ui/icons/AddToQueue';\r\nimport RemoveFromQueueIcon from '@material-ui/icons/RemoveFromQueue';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: \"6px 16px\"\r\n  },\r\n  secondaryTail: {\r\n    backgroundColor: theme.palette.secondary.main\r\n  }\r\n}));\r\n\r\nexport default function StockTimeline(props) {\r\n  const classes = useStyles();\r\n\r\n  function parseDate(date) {\r\n      console.log(new Date(date));\r\n      return new Date(date).toLocaleTimeString();\r\n  }\r\n\r\n  return (\r\n    <Timeline align=\"alternate\">\r\n      {props.stocks &&\r\n        props.stocks.map((stock) => (\r\n          <TimelineItem>\r\n            <TimelineOppositeContent>\r\n              <Typography variant=\"body2\" color=\"textSecondary\">\r\n                {parseDate(stock.createdAt)}\r\n              </Typography>\r\n            </TimelineOppositeContent>\r\n            <TimelineSeparator>\r\n                 {stock.actionType === 0 ? <TimelineDot color=\"primary\"> <ArrowDownwardIcon/> </TimelineDot>\r\n                  :<TimelineDot color=\"secondary\"><ArrowUpwardIcon/></TimelineDot>\r\n                  }\r\n              <TimelineConnector />\r\n            </TimelineSeparator>\r\n            <TimelineContent>\r\n              <Paper elevation={3} className={classes.paper}>\r\n                <Typography variant=\"h6\" component=\"h1\">\r\n                {stock.item.code} &rarr; {stock.bin.code} : {stock.quantity}\r\n                </Typography>\r\n\r\n              </Paper>\r\n            </TimelineContent>\r\n          </TimelineItem>\r\n        ))}\r\n    </Timeline>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useIntl } from 'react-intl'\r\nimport Page from 'material-ui-shell/lib/containers/Page'\r\nimport Scrollbar from 'material-ui-shell/lib/components/Scrollbar'\r\nimport 'github-markdown-css'\r\nimport StockTimeline from './Timeline'\r\n\r\nexport default function () {\r\n  const [movements, setMovements] = useState(null)\r\n  const intl = useIntl()\r\n\r\n  const loadData = async () => {\r\n    fetch('http://localhost:57678/api/Stocks')\r\n      .then(response => { console.log(response); return response.json()})\r\n      .then(data => {\r\n        setMovements(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error while importing:', error);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadData()\r\n  }, [])\r\n\r\n  return (\r\n    <Page\r\n      pageTitle={intl.formatMessage({ id: 'stockmovements', defaultMessage: 'Stock Movements' })}\r\n    >\r\n      <Scrollbar>\r\n        <StockTimeline stocks = {movements} />\r\n      </Scrollbar>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}